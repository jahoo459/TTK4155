
uartTester.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000114  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .bss          00000004  00800100  00800100  00000188  2**0
                  ALLOC
  2 .comment      00000030  00000000  00000000  00000188  2**0
                  CONTENTS, READONLY

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
   4:	0c 94 4a 00 	jmp	0x94	; 0x94 <__bad_interrupt>
   8:	0c 94 4a 00 	jmp	0x94	; 0x94 <__bad_interrupt>
   c:	0c 94 4a 00 	jmp	0x94	; 0x94 <__bad_interrupt>
  10:	0c 94 4a 00 	jmp	0x94	; 0x94 <__bad_interrupt>
  14:	0c 94 4a 00 	jmp	0x94	; 0x94 <__bad_interrupt>
  18:	0c 94 4a 00 	jmp	0x94	; 0x94 <__bad_interrupt>
  1c:	0c 94 4a 00 	jmp	0x94	; 0x94 <__bad_interrupt>
  20:	0c 94 4a 00 	jmp	0x94	; 0x94 <__bad_interrupt>
  24:	0c 94 4a 00 	jmp	0x94	; 0x94 <__bad_interrupt>
  28:	0c 94 4a 00 	jmp	0x94	; 0x94 <__bad_interrupt>
  2c:	0c 94 4a 00 	jmp	0x94	; 0x94 <__bad_interrupt>
  30:	0c 94 4a 00 	jmp	0x94	; 0x94 <__bad_interrupt>
  34:	0c 94 4a 00 	jmp	0x94	; 0x94 <__bad_interrupt>
  38:	0c 94 4a 00 	jmp	0x94	; 0x94 <__bad_interrupt>
  3c:	0c 94 4a 00 	jmp	0x94	; 0x94 <__bad_interrupt>
  40:	0c 94 4a 00 	jmp	0x94	; 0x94 <__bad_interrupt>
  44:	0c 94 4a 00 	jmp	0x94	; 0x94 <__bad_interrupt>
  48:	0c 94 4a 00 	jmp	0x94	; 0x94 <__bad_interrupt>
  4c:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__vector_19>
  50:	0c 94 4a 00 	jmp	0x94	; 0x94 <__bad_interrupt>
  54:	0c 94 4a 00 	jmp	0x94	; 0x94 <__bad_interrupt>
  58:	0c 94 4a 00 	jmp	0x94	; 0x94 <__bad_interrupt>
  5c:	0c 94 4a 00 	jmp	0x94	; 0x94 <__bad_interrupt>
  60:	0c 94 4a 00 	jmp	0x94	; 0x94 <__bad_interrupt>
  64:	0c 94 4a 00 	jmp	0x94	; 0x94 <__bad_interrupt>
  68:	0c 94 4a 00 	jmp	0x94	; 0x94 <__bad_interrupt>
  6c:	0c 94 4a 00 	jmp	0x94	; 0x94 <__bad_interrupt>

00000070 <__ctors_end>:
  70:	11 24       	eor	r1, r1
  72:	1f be       	out	0x3f, r1	; 63
  74:	cf ef       	ldi	r28, 0xFF	; 255
  76:	d4 e0       	ldi	r29, 0x04	; 4
  78:	de bf       	out	0x3e, r29	; 62
  7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_clear_bss>:
  7c:	21 e0       	ldi	r18, 0x01	; 1
  7e:	a0 e0       	ldi	r26, 0x00	; 0
  80:	b1 e0       	ldi	r27, 0x01	; 1
  82:	01 c0       	rjmp	.+2      	; 0x86 <.do_clear_bss_start>

00000084 <.do_clear_bss_loop>:
  84:	1d 92       	st	X+, r1

00000086 <.do_clear_bss_start>:
  86:	a4 30       	cpi	r26, 0x04	; 4
  88:	b2 07       	cpc	r27, r18
  8a:	e1 f7       	brne	.-8      	; 0x84 <.do_clear_bss_loop>
  8c:	0e 94 6b 00 	call	0xd6	; 0xd6 <main>
  90:	0c 94 88 00 	jmp	0x110	; 0x110 <_exit>

00000094 <__bad_interrupt>:
  94:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000098 <initUart>:
  98:	10 bc       	out	0x20, r1	; 32
  9a:	8f e1       	ldi	r24, 0x1F	; 31
  9c:	89 b9       	out	0x09, r24	; 9
  9e:	88 e1       	ldi	r24, 0x18	; 24
  a0:	8a b9       	out	0x0a, r24	; 10
  a2:	57 9a       	sbi	0x0a, 7	; 10
  a4:	8e e8       	ldi	r24, 0x8E	; 142
  a6:	80 bd       	out	0x20, r24	; 32
  a8:	08 95       	ret

000000aa <sendData>:
  aa:	5d 9b       	sbis	0x0b, 5	; 11
  ac:	fe cf       	rjmp	.-4      	; 0xaa <sendData>
  ae:	8c b9       	out	0x0c, r24	; 12
  b0:	08 95       	ret

000000b2 <__vector_19>:
  b2:	1f 92       	push	r1
  b4:	0f 92       	push	r0
  b6:	0f b6       	in	r0, 0x3f	; 63
  b8:	0f 92       	push	r0
  ba:	11 24       	eor	r1, r1
  bc:	8f 93       	push	r24
  be:	8c b1       	in	r24, 0x0c	; 12
  c0:	80 93 01 01 	sts	0x0101, r24
  c4:	81 e0       	ldi	r24, 0x01	; 1
  c6:	80 93 00 01 	sts	0x0100, r24
  ca:	8f 91       	pop	r24
  cc:	0f 90       	pop	r0
  ce:	0f be       	out	0x3f, r0	; 63
  d0:	0f 90       	pop	r0
  d2:	1f 90       	pop	r1
  d4:	18 95       	reti

000000d6 <main>:
  d6:	b8 9a       	sbi	0x17, 0	; 23
  d8:	c0 98       	cbi	0x18, 0	; 24
  da:	60 e0       	ldi	r22, 0x00	; 0
  dc:	70 e0       	ldi	r23, 0x00	; 0
  de:	80 e8       	ldi	r24, 0x80	; 128
  e0:	95 e2       	ldi	r25, 0x25	; 37
  e2:	0e 94 4c 00 	call	0x98	; 0x98 <initUart>
  e6:	85 b7       	in	r24, 0x35	; 53
  e8:	80 61       	ori	r24, 0x10	; 16
  ea:	85 bf       	out	0x35, r24	; 53
  ec:	84 b7       	in	r24, 0x34	; 52
  ee:	8f 7d       	andi	r24, 0xDF	; 223
  f0:	84 bf       	out	0x34, r24	; 52
  f2:	86 b7       	in	r24, 0x36	; 54
  f4:	80 68       	ori	r24, 0x80	; 128
  f6:	86 bf       	out	0x36, r24	; 54
  f8:	78 94       	sei
  fa:	80 91 00 01 	lds	r24, 0x0100
  fe:	81 30       	cpi	r24, 0x01	; 1
 100:	e1 f7       	brne	.-8      	; 0xfa <main+0x24>
 102:	10 92 00 01 	sts	0x0100, r1
 106:	80 91 01 01 	lds	r24, 0x0101
 10a:	0e 94 55 00 	call	0xaa	; 0xaa <sendData>
 10e:	f5 cf       	rjmp	.-22     	; 0xfa <main+0x24>

00000110 <_exit>:
 110:	f8 94       	cli

00000112 <__stop_program>:
 112:	ff cf       	rjmp	.-2      	; 0x112 <__stop_program>
