
uartTester.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000006  00800100  00000468  000004fc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000468  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000e  00800106  00800106  00000502  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000502  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000040  00000000  00000000  00000532  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000002ba  00000000  00000000  00000572  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000001a4  00000000  00000000  0000082c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000116  00000000  00000000  000009d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000074  00000000  00000000  00000ae8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000001d2  00000000  00000000  00000b5c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000088  00000000  00000000  00000d2e  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000030  00000000  00000000  00000db6  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
   4:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   8:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  10:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  14:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  1c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  24:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  28:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  2c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  30:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  34:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  38:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  3c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  40:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  44:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  48:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  4c:	0c 94 6e 00 	jmp	0xdc	; 0xdc <__vector_19>
  50:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  58:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  5c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  60:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  64:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  68:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  6c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>

00000070 <__ctors_end>:
  70:	11 24       	eor	r1, r1
  72:	1f be       	out	0x3f, r1	; 63
  74:	cf ef       	ldi	r28, 0xFF	; 255
  76:	d4 e0       	ldi	r29, 0x04	; 4
  78:	de bf       	out	0x3e, r29	; 62
  7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_clear_bss>:
  7c:	21 e0       	ldi	r18, 0x01	; 1
  7e:	a6 e0       	ldi	r26, 0x06	; 6
  80:	b1 e0       	ldi	r27, 0x01	; 1
  82:	01 c0       	rjmp	.+2      	; 0x86 <.do_clear_bss_start>

00000084 <.do_clear_bss_loop>:
  84:	1d 92       	st	X+, r1

00000086 <.do_clear_bss_start>:
  86:	a4 31       	cpi	r26, 0x14	; 20
  88:	b2 07       	cpc	r27, r18
  8a:	e1 f7       	brne	.-8      	; 0x84 <.do_clear_bss_loop>

0000008c <__do_copy_data>:
  8c:	11 e0       	ldi	r17, 0x01	; 1
  8e:	a0 e0       	ldi	r26, 0x00	; 0
  90:	b1 e0       	ldi	r27, 0x01	; 1
  92:	e8 e6       	ldi	r30, 0x68	; 104
  94:	f4 e0       	ldi	r31, 0x04	; 4
  96:	02 c0       	rjmp	.+4      	; 0x9c <__do_copy_data+0x10>
  98:	05 90       	lpm	r0, Z+
  9a:	0d 92       	st	X+, r0
  9c:	a6 30       	cpi	r26, 0x06	; 6
  9e:	b1 07       	cpc	r27, r17
  a0:	d9 f7       	brne	.-10     	; 0x98 <__do_copy_data+0xc>
  a2:	0e 94 80 00 	call	0x100	; 0x100 <main>
  a6:	0c 94 32 02 	jmp	0x464	; 0x464 <_exit>

000000aa <__bad_interrupt>:
  aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <sendData>:

void sendData(unsigned char byte2Send)
{
	
	/* Wait for empty transmit buffer */
	while ( !( UCSR0A & (1<<UDRE0)) );
  ae:	5d 9b       	sbis	0x0b, 5	; 11
  b0:	fe cf       	rjmp	.-4      	; 0xae <sendData>
	/* Put data into buffer, sends the data */
	UDR0 = byte2Send;
  b2:	8c b9       	out	0x0c, r24	; 12
  b4:	08 95       	ret

000000b6 <receiveData>:
}

unsigned char receiveData()
{
	/* Wait for data to be received */
	while ( !(UCSR0A & (1<<RXC0)) );
  b6:	5f 9b       	sbis	0x0b, 7	; 11
  b8:	fe cf       	rjmp	.-4      	; 0xb6 <receiveData>
	/* Get and return received data from buffer */
	unsigned char receivedByte = UDR0;
  ba:	8c b1       	in	r24, 0x0c	; 12
	
	return receivedByte;
}
  bc:	08 95       	ret

000000be <initUart>:
void initUart(unsigned int baud, unsigned int fosc)
{
	uint32_t ubrr = UBRR;
	
	/*Set BAUD rate*/
	UBRR0H = (unsigned char) (ubrr>>8);
  be:	10 bc       	out	0x20, r1	; 32
	UBRR0L = (unsigned char) ubrr;
  c0:	8f e1       	ldi	r24, 0x1F	; 31
  c2:	89 b9       	out	0x09, r24	; 9
	
	/* Enable receiver and transmitter */
	UCSR0B = (1<<RXEN0)|(1<<TXEN0);
  c4:	88 e1       	ldi	r24, 0x18	; 24
  c6:	8a b9       	out	0x0a, r24	; 10
	
	//Enable UART0 interrupts
	set_bit(UCSR0B, RXCIE0);
  c8:	57 9a       	sbi	0x0a, 7	; 10
	
	/* Set frame format: 8data, 2stop bit */
	UCSR0C = (1<<URSEL0)|(1<<USBS0)|(3<<UCSZ00);
  ca:	8e e8       	ldi	r24, 0x8E	; 142
  cc:	80 bd       	out	0x20, r24	; 32
	
	fdevopen(sendData, receiveData);
  ce:	6b e5       	ldi	r22, 0x5B	; 91
  d0:	70 e0       	ldi	r23, 0x00	; 0
  d2:	87 e5       	ldi	r24, 0x57	; 87
  d4:	90 e0       	ldi	r25, 0x00	; 0
  d6:	0e 94 9d 00 	call	0x13a	; 0x13a <fdevopen>
  da:	08 95       	ret

000000dc <__vector_19>:
}



ISR(USART0_RXC_vect)
{
  dc:	1f 92       	push	r1
  de:	0f 92       	push	r0
  e0:	0f b6       	in	r0, 0x3f	; 63
  e2:	0f 92       	push	r0
  e4:	11 24       	eor	r1, r1
  e6:	8f 93       	push	r24
	//interrupt generated after receiving a byte
	receivedByte = UDR0;		//received byte
  e8:	8c b1       	in	r24, 0x0c	; 12
  ea:	80 93 07 01 	sts	0x0107, r24
	receivedFlag = 1;		//set the flag to 1
  ee:	81 e0       	ldi	r24, 0x01	; 1
  f0:	80 93 06 01 	sts	0x0106, r24
}
  f4:	8f 91       	pop	r24
  f6:	0f 90       	pop	r0
  f8:	0f be       	out	0x3f, r0	; 63
  fa:	0f 90       	pop	r0
  fc:	1f 90       	pop	r1
  fe:	18 95       	reti

00000100 <main>:



int main(void)
{	
	set_bit(DDRB, PB0);
 100:	b8 9a       	sbi	0x17, 0	; 23
	clear_bit(PORTB, PB0);
 102:	c0 98       	cbi	0x18, 0	; 24
	
	initUart(BAUDRATE, FOSC);
 104:	60 e0       	ldi	r22, 0x00	; 0
 106:	70 e0       	ldi	r23, 0x00	; 0
 108:	80 e8       	ldi	r24, 0x80	; 128
 10a:	95 e2       	ldi	r25, 0x25	; 37
 10c:	0e 94 5f 00 	call	0xbe	; 0xbe <initUart>
	
	set_sleep_mode(SLEEP_MODE_PWR_SAVE);
 110:	85 b7       	in	r24, 0x35	; 53
 112:	80 61       	ori	r24, 0x10	; 16
 114:	85 bf       	out	0x35, r24	; 53
 116:	84 b7       	in	r24, 0x34	; 52
 118:	8f 7d       	andi	r24, 0xDF	; 223
 11a:	84 bf       	out	0x34, r24	; 52
 11c:	86 b7       	in	r24, 0x36	; 54
 11e:	80 68       	ori	r24, 0x80	; 128
 120:	86 bf       	out	0x36, r24	; 54
	sei();
 122:	78 94       	sei

    while(1)
    {		
		if(receivedFlag == 1)
 124:	80 91 06 01 	lds	r24, 0x0106
 128:	81 30       	cpi	r24, 0x01	; 1
 12a:	e1 f7       	brne	.-8      	; 0x124 <main+0x24>
		{
			receivedFlag = 0;
 12c:	10 92 06 01 	sts	0x0106, r1
			sendData(receivedByte);
 130:	80 91 07 01 	lds	r24, 0x0107
 134:	0e 94 57 00 	call	0xae	; 0xae <sendData>
 138:	f5 cf       	rjmp	.-22     	; 0x124 <main+0x24>

0000013a <fdevopen>:
 13a:	0f 93       	push	r16
 13c:	1f 93       	push	r17
 13e:	cf 93       	push	r28
 140:	df 93       	push	r29
 142:	ec 01       	movw	r28, r24
 144:	8b 01       	movw	r16, r22
 146:	00 97       	sbiw	r24, 0x00	; 0
 148:	31 f4       	brne	.+12     	; 0x156 <fdevopen+0x1c>
 14a:	61 15       	cp	r22, r1
 14c:	71 05       	cpc	r23, r1
 14e:	19 f4       	brne	.+6      	; 0x156 <fdevopen+0x1c>
 150:	80 e0       	ldi	r24, 0x00	; 0
 152:	90 e0       	ldi	r25, 0x00	; 0
 154:	38 c0       	rjmp	.+112    	; 0x1c6 <fdevopen+0x8c>
 156:	6e e0       	ldi	r22, 0x0E	; 14
 158:	70 e0       	ldi	r23, 0x00	; 0
 15a:	81 e0       	ldi	r24, 0x01	; 1
 15c:	90 e0       	ldi	r25, 0x00	; 0
 15e:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <calloc>
 162:	fc 01       	movw	r30, r24
 164:	00 97       	sbiw	r24, 0x00	; 0
 166:	a1 f3       	breq	.-24     	; 0x150 <fdevopen+0x16>
 168:	80 e8       	ldi	r24, 0x80	; 128
 16a:	83 83       	std	Z+3, r24	; 0x03
 16c:	01 15       	cp	r16, r1
 16e:	11 05       	cpc	r17, r1
 170:	71 f0       	breq	.+28     	; 0x18e <fdevopen+0x54>
 172:	13 87       	std	Z+11, r17	; 0x0b
 174:	02 87       	std	Z+10, r16	; 0x0a
 176:	81 e8       	ldi	r24, 0x81	; 129
 178:	83 83       	std	Z+3, r24	; 0x03
 17a:	80 91 0a 01 	lds	r24, 0x010A
 17e:	90 91 0b 01 	lds	r25, 0x010B
 182:	89 2b       	or	r24, r25
 184:	21 f4       	brne	.+8      	; 0x18e <fdevopen+0x54>
 186:	f0 93 0b 01 	sts	0x010B, r31
 18a:	e0 93 0a 01 	sts	0x010A, r30
 18e:	20 97       	sbiw	r28, 0x00	; 0
 190:	c9 f0       	breq	.+50     	; 0x1c4 <fdevopen+0x8a>
 192:	d1 87       	std	Z+9, r29	; 0x09
 194:	c0 87       	std	Z+8, r28	; 0x08
 196:	83 81       	ldd	r24, Z+3	; 0x03
 198:	82 60       	ori	r24, 0x02	; 2
 19a:	83 83       	std	Z+3, r24	; 0x03
 19c:	80 91 0c 01 	lds	r24, 0x010C
 1a0:	90 91 0d 01 	lds	r25, 0x010D
 1a4:	89 2b       	or	r24, r25
 1a6:	71 f4       	brne	.+28     	; 0x1c4 <fdevopen+0x8a>
 1a8:	f0 93 0d 01 	sts	0x010D, r31
 1ac:	e0 93 0c 01 	sts	0x010C, r30
 1b0:	80 91 0e 01 	lds	r24, 0x010E
 1b4:	90 91 0f 01 	lds	r25, 0x010F
 1b8:	89 2b       	or	r24, r25
 1ba:	21 f4       	brne	.+8      	; 0x1c4 <fdevopen+0x8a>
 1bc:	f0 93 0f 01 	sts	0x010F, r31
 1c0:	e0 93 0e 01 	sts	0x010E, r30
 1c4:	cf 01       	movw	r24, r30
 1c6:	df 91       	pop	r29
 1c8:	cf 91       	pop	r28
 1ca:	1f 91       	pop	r17
 1cc:	0f 91       	pop	r16
 1ce:	08 95       	ret

000001d0 <calloc>:
 1d0:	0f 93       	push	r16
 1d2:	1f 93       	push	r17
 1d4:	cf 93       	push	r28
 1d6:	df 93       	push	r29
 1d8:	86 9f       	mul	r24, r22
 1da:	80 01       	movw	r16, r0
 1dc:	87 9f       	mul	r24, r23
 1de:	10 0d       	add	r17, r0
 1e0:	96 9f       	mul	r25, r22
 1e2:	10 0d       	add	r17, r0
 1e4:	11 24       	eor	r1, r1
 1e6:	c8 01       	movw	r24, r16
 1e8:	0e 94 04 01 	call	0x208	; 0x208 <malloc>
 1ec:	ec 01       	movw	r28, r24
 1ee:	00 97       	sbiw	r24, 0x00	; 0
 1f0:	29 f0       	breq	.+10     	; 0x1fc <calloc+0x2c>
 1f2:	a8 01       	movw	r20, r16
 1f4:	60 e0       	ldi	r22, 0x00	; 0
 1f6:	70 e0       	ldi	r23, 0x00	; 0
 1f8:	0e 94 2b 02 	call	0x456	; 0x456 <memset>
 1fc:	ce 01       	movw	r24, r28
 1fe:	df 91       	pop	r29
 200:	cf 91       	pop	r28
 202:	1f 91       	pop	r17
 204:	0f 91       	pop	r16
 206:	08 95       	ret

00000208 <malloc>:
 208:	cf 93       	push	r28
 20a:	df 93       	push	r29
 20c:	82 30       	cpi	r24, 0x02	; 2
 20e:	91 05       	cpc	r25, r1
 210:	10 f4       	brcc	.+4      	; 0x216 <malloc+0xe>
 212:	82 e0       	ldi	r24, 0x02	; 2
 214:	90 e0       	ldi	r25, 0x00	; 0
 216:	e0 91 12 01 	lds	r30, 0x0112
 21a:	f0 91 13 01 	lds	r31, 0x0113
 21e:	20 e0       	ldi	r18, 0x00	; 0
 220:	30 e0       	ldi	r19, 0x00	; 0
 222:	a0 e0       	ldi	r26, 0x00	; 0
 224:	b0 e0       	ldi	r27, 0x00	; 0
 226:	30 97       	sbiw	r30, 0x00	; 0
 228:	39 f1       	breq	.+78     	; 0x278 <malloc+0x70>
 22a:	40 81       	ld	r20, Z
 22c:	51 81       	ldd	r21, Z+1	; 0x01
 22e:	48 17       	cp	r20, r24
 230:	59 07       	cpc	r21, r25
 232:	b8 f0       	brcs	.+46     	; 0x262 <malloc+0x5a>
 234:	48 17       	cp	r20, r24
 236:	59 07       	cpc	r21, r25
 238:	71 f4       	brne	.+28     	; 0x256 <malloc+0x4e>
 23a:	82 81       	ldd	r24, Z+2	; 0x02
 23c:	93 81       	ldd	r25, Z+3	; 0x03
 23e:	10 97       	sbiw	r26, 0x00	; 0
 240:	29 f0       	breq	.+10     	; 0x24c <malloc+0x44>
 242:	13 96       	adiw	r26, 0x03	; 3
 244:	9c 93       	st	X, r25
 246:	8e 93       	st	-X, r24
 248:	12 97       	sbiw	r26, 0x02	; 2
 24a:	2c c0       	rjmp	.+88     	; 0x2a4 <malloc+0x9c>
 24c:	90 93 13 01 	sts	0x0113, r25
 250:	80 93 12 01 	sts	0x0112, r24
 254:	27 c0       	rjmp	.+78     	; 0x2a4 <malloc+0x9c>
 256:	21 15       	cp	r18, r1
 258:	31 05       	cpc	r19, r1
 25a:	31 f0       	breq	.+12     	; 0x268 <malloc+0x60>
 25c:	42 17       	cp	r20, r18
 25e:	53 07       	cpc	r21, r19
 260:	18 f0       	brcs	.+6      	; 0x268 <malloc+0x60>
 262:	a9 01       	movw	r20, r18
 264:	db 01       	movw	r26, r22
 266:	01 c0       	rjmp	.+2      	; 0x26a <malloc+0x62>
 268:	ef 01       	movw	r28, r30
 26a:	9a 01       	movw	r18, r20
 26c:	bd 01       	movw	r22, r26
 26e:	df 01       	movw	r26, r30
 270:	02 80       	ldd	r0, Z+2	; 0x02
 272:	f3 81       	ldd	r31, Z+3	; 0x03
 274:	e0 2d       	mov	r30, r0
 276:	d7 cf       	rjmp	.-82     	; 0x226 <malloc+0x1e>
 278:	21 15       	cp	r18, r1
 27a:	31 05       	cpc	r19, r1
 27c:	f9 f0       	breq	.+62     	; 0x2bc <malloc+0xb4>
 27e:	28 1b       	sub	r18, r24
 280:	39 0b       	sbc	r19, r25
 282:	24 30       	cpi	r18, 0x04	; 4
 284:	31 05       	cpc	r19, r1
 286:	80 f4       	brcc	.+32     	; 0x2a8 <malloc+0xa0>
 288:	8a 81       	ldd	r24, Y+2	; 0x02
 28a:	9b 81       	ldd	r25, Y+3	; 0x03
 28c:	61 15       	cp	r22, r1
 28e:	71 05       	cpc	r23, r1
 290:	21 f0       	breq	.+8      	; 0x29a <malloc+0x92>
 292:	fb 01       	movw	r30, r22
 294:	93 83       	std	Z+3, r25	; 0x03
 296:	82 83       	std	Z+2, r24	; 0x02
 298:	04 c0       	rjmp	.+8      	; 0x2a2 <malloc+0x9a>
 29a:	90 93 13 01 	sts	0x0113, r25
 29e:	80 93 12 01 	sts	0x0112, r24
 2a2:	fe 01       	movw	r30, r28
 2a4:	32 96       	adiw	r30, 0x02	; 2
 2a6:	44 c0       	rjmp	.+136    	; 0x330 <malloc+0x128>
 2a8:	fe 01       	movw	r30, r28
 2aa:	e2 0f       	add	r30, r18
 2ac:	f3 1f       	adc	r31, r19
 2ae:	81 93       	st	Z+, r24
 2b0:	91 93       	st	Z+, r25
 2b2:	22 50       	subi	r18, 0x02	; 2
 2b4:	31 09       	sbc	r19, r1
 2b6:	39 83       	std	Y+1, r19	; 0x01
 2b8:	28 83       	st	Y, r18
 2ba:	3a c0       	rjmp	.+116    	; 0x330 <malloc+0x128>
 2bc:	20 91 10 01 	lds	r18, 0x0110
 2c0:	30 91 11 01 	lds	r19, 0x0111
 2c4:	23 2b       	or	r18, r19
 2c6:	41 f4       	brne	.+16     	; 0x2d8 <malloc+0xd0>
 2c8:	20 91 02 01 	lds	r18, 0x0102
 2cc:	30 91 03 01 	lds	r19, 0x0103
 2d0:	30 93 11 01 	sts	0x0111, r19
 2d4:	20 93 10 01 	sts	0x0110, r18
 2d8:	20 91 00 01 	lds	r18, 0x0100
 2dc:	30 91 01 01 	lds	r19, 0x0101
 2e0:	21 15       	cp	r18, r1
 2e2:	31 05       	cpc	r19, r1
 2e4:	41 f4       	brne	.+16     	; 0x2f6 <malloc+0xee>
 2e6:	2d b7       	in	r18, 0x3d	; 61
 2e8:	3e b7       	in	r19, 0x3e	; 62
 2ea:	40 91 04 01 	lds	r20, 0x0104
 2ee:	50 91 05 01 	lds	r21, 0x0105
 2f2:	24 1b       	sub	r18, r20
 2f4:	35 0b       	sbc	r19, r21
 2f6:	e0 91 10 01 	lds	r30, 0x0110
 2fa:	f0 91 11 01 	lds	r31, 0x0111
 2fe:	e2 17       	cp	r30, r18
 300:	f3 07       	cpc	r31, r19
 302:	a0 f4       	brcc	.+40     	; 0x32c <malloc+0x124>
 304:	2e 1b       	sub	r18, r30
 306:	3f 0b       	sbc	r19, r31
 308:	28 17       	cp	r18, r24
 30a:	39 07       	cpc	r19, r25
 30c:	78 f0       	brcs	.+30     	; 0x32c <malloc+0x124>
 30e:	ac 01       	movw	r20, r24
 310:	4e 5f       	subi	r20, 0xFE	; 254
 312:	5f 4f       	sbci	r21, 0xFF	; 255
 314:	24 17       	cp	r18, r20
 316:	35 07       	cpc	r19, r21
 318:	48 f0       	brcs	.+18     	; 0x32c <malloc+0x124>
 31a:	4e 0f       	add	r20, r30
 31c:	5f 1f       	adc	r21, r31
 31e:	50 93 11 01 	sts	0x0111, r21
 322:	40 93 10 01 	sts	0x0110, r20
 326:	81 93       	st	Z+, r24
 328:	91 93       	st	Z+, r25
 32a:	02 c0       	rjmp	.+4      	; 0x330 <malloc+0x128>
 32c:	e0 e0       	ldi	r30, 0x00	; 0
 32e:	f0 e0       	ldi	r31, 0x00	; 0
 330:	cf 01       	movw	r24, r30
 332:	df 91       	pop	r29
 334:	cf 91       	pop	r28
 336:	08 95       	ret

00000338 <free>:
 338:	cf 93       	push	r28
 33a:	df 93       	push	r29
 33c:	00 97       	sbiw	r24, 0x00	; 0
 33e:	09 f4       	brne	.+2      	; 0x342 <free+0xa>
 340:	87 c0       	rjmp	.+270    	; 0x450 <free+0x118>
 342:	fc 01       	movw	r30, r24
 344:	32 97       	sbiw	r30, 0x02	; 2
 346:	13 82       	std	Z+3, r1	; 0x03
 348:	12 82       	std	Z+2, r1	; 0x02
 34a:	c0 91 12 01 	lds	r28, 0x0112
 34e:	d0 91 13 01 	lds	r29, 0x0113
 352:	20 97       	sbiw	r28, 0x00	; 0
 354:	81 f4       	brne	.+32     	; 0x376 <free+0x3e>
 356:	20 81       	ld	r18, Z
 358:	31 81       	ldd	r19, Z+1	; 0x01
 35a:	28 0f       	add	r18, r24
 35c:	39 1f       	adc	r19, r25
 35e:	80 91 10 01 	lds	r24, 0x0110
 362:	90 91 11 01 	lds	r25, 0x0111
 366:	82 17       	cp	r24, r18
 368:	93 07       	cpc	r25, r19
 36a:	79 f5       	brne	.+94     	; 0x3ca <free+0x92>
 36c:	f0 93 11 01 	sts	0x0111, r31
 370:	e0 93 10 01 	sts	0x0110, r30
 374:	6d c0       	rjmp	.+218    	; 0x450 <free+0x118>
 376:	de 01       	movw	r26, r28
 378:	20 e0       	ldi	r18, 0x00	; 0
 37a:	30 e0       	ldi	r19, 0x00	; 0
 37c:	ae 17       	cp	r26, r30
 37e:	bf 07       	cpc	r27, r31
 380:	50 f4       	brcc	.+20     	; 0x396 <free+0x5e>
 382:	12 96       	adiw	r26, 0x02	; 2
 384:	4d 91       	ld	r20, X+
 386:	5c 91       	ld	r21, X
 388:	13 97       	sbiw	r26, 0x03	; 3
 38a:	9d 01       	movw	r18, r26
 38c:	41 15       	cp	r20, r1
 38e:	51 05       	cpc	r21, r1
 390:	09 f1       	breq	.+66     	; 0x3d4 <free+0x9c>
 392:	da 01       	movw	r26, r20
 394:	f3 cf       	rjmp	.-26     	; 0x37c <free+0x44>
 396:	b3 83       	std	Z+3, r27	; 0x03
 398:	a2 83       	std	Z+2, r26	; 0x02
 39a:	40 81       	ld	r20, Z
 39c:	51 81       	ldd	r21, Z+1	; 0x01
 39e:	84 0f       	add	r24, r20
 3a0:	95 1f       	adc	r25, r21
 3a2:	8a 17       	cp	r24, r26
 3a4:	9b 07       	cpc	r25, r27
 3a6:	71 f4       	brne	.+28     	; 0x3c4 <free+0x8c>
 3a8:	8d 91       	ld	r24, X+
 3aa:	9c 91       	ld	r25, X
 3ac:	11 97       	sbiw	r26, 0x01	; 1
 3ae:	84 0f       	add	r24, r20
 3b0:	95 1f       	adc	r25, r21
 3b2:	02 96       	adiw	r24, 0x02	; 2
 3b4:	91 83       	std	Z+1, r25	; 0x01
 3b6:	80 83       	st	Z, r24
 3b8:	12 96       	adiw	r26, 0x02	; 2
 3ba:	8d 91       	ld	r24, X+
 3bc:	9c 91       	ld	r25, X
 3be:	13 97       	sbiw	r26, 0x03	; 3
 3c0:	93 83       	std	Z+3, r25	; 0x03
 3c2:	82 83       	std	Z+2, r24	; 0x02
 3c4:	21 15       	cp	r18, r1
 3c6:	31 05       	cpc	r19, r1
 3c8:	29 f4       	brne	.+10     	; 0x3d4 <free+0x9c>
 3ca:	f0 93 13 01 	sts	0x0113, r31
 3ce:	e0 93 12 01 	sts	0x0112, r30
 3d2:	3e c0       	rjmp	.+124    	; 0x450 <free+0x118>
 3d4:	d9 01       	movw	r26, r18
 3d6:	13 96       	adiw	r26, 0x03	; 3
 3d8:	fc 93       	st	X, r31
 3da:	ee 93       	st	-X, r30
 3dc:	12 97       	sbiw	r26, 0x02	; 2
 3de:	4d 91       	ld	r20, X+
 3e0:	5d 91       	ld	r21, X+
 3e2:	a4 0f       	add	r26, r20
 3e4:	b5 1f       	adc	r27, r21
 3e6:	ea 17       	cp	r30, r26
 3e8:	fb 07       	cpc	r31, r27
 3ea:	79 f4       	brne	.+30     	; 0x40a <free+0xd2>
 3ec:	80 81       	ld	r24, Z
 3ee:	91 81       	ldd	r25, Z+1	; 0x01
 3f0:	84 0f       	add	r24, r20
 3f2:	95 1f       	adc	r25, r21
 3f4:	02 96       	adiw	r24, 0x02	; 2
 3f6:	d9 01       	movw	r26, r18
 3f8:	11 96       	adiw	r26, 0x01	; 1
 3fa:	9c 93       	st	X, r25
 3fc:	8e 93       	st	-X, r24
 3fe:	82 81       	ldd	r24, Z+2	; 0x02
 400:	93 81       	ldd	r25, Z+3	; 0x03
 402:	13 96       	adiw	r26, 0x03	; 3
 404:	9c 93       	st	X, r25
 406:	8e 93       	st	-X, r24
 408:	12 97       	sbiw	r26, 0x02	; 2
 40a:	e0 e0       	ldi	r30, 0x00	; 0
 40c:	f0 e0       	ldi	r31, 0x00	; 0
 40e:	8a 81       	ldd	r24, Y+2	; 0x02
 410:	9b 81       	ldd	r25, Y+3	; 0x03
 412:	00 97       	sbiw	r24, 0x00	; 0
 414:	19 f0       	breq	.+6      	; 0x41c <free+0xe4>
 416:	fe 01       	movw	r30, r28
 418:	ec 01       	movw	r28, r24
 41a:	f9 cf       	rjmp	.-14     	; 0x40e <free+0xd6>
 41c:	ce 01       	movw	r24, r28
 41e:	02 96       	adiw	r24, 0x02	; 2
 420:	28 81       	ld	r18, Y
 422:	39 81       	ldd	r19, Y+1	; 0x01
 424:	82 0f       	add	r24, r18
 426:	93 1f       	adc	r25, r19
 428:	20 91 10 01 	lds	r18, 0x0110
 42c:	30 91 11 01 	lds	r19, 0x0111
 430:	28 17       	cp	r18, r24
 432:	39 07       	cpc	r19, r25
 434:	69 f4       	brne	.+26     	; 0x450 <free+0x118>
 436:	30 97       	sbiw	r30, 0x00	; 0
 438:	29 f4       	brne	.+10     	; 0x444 <free+0x10c>
 43a:	10 92 13 01 	sts	0x0113, r1
 43e:	10 92 12 01 	sts	0x0112, r1
 442:	02 c0       	rjmp	.+4      	; 0x448 <free+0x110>
 444:	13 82       	std	Z+3, r1	; 0x03
 446:	12 82       	std	Z+2, r1	; 0x02
 448:	d0 93 11 01 	sts	0x0111, r29
 44c:	c0 93 10 01 	sts	0x0110, r28
 450:	df 91       	pop	r29
 452:	cf 91       	pop	r28
 454:	08 95       	ret

00000456 <memset>:
 456:	dc 01       	movw	r26, r24
 458:	01 c0       	rjmp	.+2      	; 0x45c <memset+0x6>
 45a:	6d 93       	st	X+, r22
 45c:	41 50       	subi	r20, 0x01	; 1
 45e:	50 40       	sbci	r21, 0x00	; 0
 460:	e0 f7       	brcc	.-8      	; 0x45a <memset+0x4>
 462:	08 95       	ret

00000464 <_exit>:
 464:	f8 94       	cli

00000466 <__stop_program>:
 466:	ff cf       	rjmp	.-2      	; 0x466 <__stop_program>
